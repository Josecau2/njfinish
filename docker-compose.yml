version: '3.8'
services:
  db:
    image: mysql:8.0
    restart: unless-stopped
    stop_grace_period: 60s
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - /var/lib/docker/volumes/njcabinets_db_data/_data:/var/lib/mysql   # keep this
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  app:
    build:
      context: .
      args:
        HTTP_PROXY: ${HTTP_PROXY:-}
        HTTPS_PROXY: ${HTTPS_PROXY:-}
        NO_PROXY: ${NO_PROXY:-}
    image: njcabinets-app
    restart: unless-stopped
    init: true
    stop_grace_period: 30s
    environment:
      NODE_ENV: production
      PORT: 8080
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_RUNTIME_ALTER: "false"
      JWT_SECRET: ${JWT_SECRET}
      BACKUP_DIR: /app/backups
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - /srv/odin/njcabinets/uploads:/app/uploads
      - /srv/odin/njcabinets/backups:/app/backups
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:8080', r=>process.exit(r.statusCode<500?0:1)).on('error', ()=>process.exit(1))\""]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 20s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend deployment service - copies SPA to Nginx docroot
  frontend-deploy:
    profiles:
      - deploy
    image: njcabinets-app
    user: "0:0"  # Run as root to write to system directories
    volumes:
      - /srv/njcabinets/www:/srv/njcabinets/www
    depends_on:
      app:
        condition: service_started
    entrypoint: ["/bin/sh", "-lc"]
    command: >
      set -e;
      echo "==> Waiting for app to be ready..."; sleep 10;
      echo "==> Detecting build directory...";
      if [ -d /app/build ]; then SRC="/app/build"; elif [ -d /app/frontend/build ]; then SRC="/app/frontend/build"; else echo "ERROR: No build directory found" && exit 1; fi;
      echo "==> Deploying frontend from $$SRC to /srv/njcabinets/www...";
      mkdir -p /srv/njcabinets/www; rm -rf /srv/njcabinets/www/*;
      cp -a "$$SRC"/. /srv/njcabinets/www/;
      chown -R www-data:www-data /srv/njcabinets/www;
      find /srv/njcabinets/www -type d -exec chmod 755 {} \; ;
      find /srv/njcabinets/www -type f -exec chmod 644 {} \; ;
      echo "==> Frontend deployment completed successfully!";
      echo "Files deployed: $(find /srv/njcabinets/www -type f | wc -l)";
    restart: "no"

volumes:
  uploads:
