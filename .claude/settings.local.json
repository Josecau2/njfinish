{
  "permissions": {
    "allow": [
      "Bash(npx typescript:*)",
      "Bash(npm run build:*)",
      "Bash(npm run lint)",
      "Bash(npx eslint:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run build:frontend:*)",
      "Bash(npx vite build:*)",
      "Bash(npm start:*)",
      "Bash(for file in \"frontend/src/components/ProposalAcceptanceModal.jsx\" \"frontend/src/components/NeutralModal.jsx\")",
      "Bash(do echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(for file in \"frontend/src/components/model/PrintPaymentReceiptModal.jsx\" \"frontend/src/components/model/PrintProposalModal.jsx\" \"frontend/src/components/LanguageSwitcher.jsx\" \"frontend/src/components/BrandLogo.jsx\")",
      "Bash(for file in \"frontend/src/components/model/ModificationModalEdit.jsx\" \"frontend/src/components/model/ModificationModal.jsx\" \"frontend/src/components/AppBreadcrumb.jsx\")",
      "Bash(for file in \"frontend/src/components/model/ModificationBrowserModal.jsx\" \"frontend/src/components/TermsModal.jsx\" \"frontend/src/components/model/EmailProposalModal.jsx\" \"frontend/src/components/model/EmailContractModal.jsx\")",
      "Bash(for file in \"frontend/src/components/EditManufacturerModal.jsx\" \"frontend/src/components/showroom/ShowroomModeToggle.jsx\" \"frontend/src/components/LoginPreview.jsx\")",
      "Bash(for file in \"frontend/src/components/model/EditGroupModal.jsx\" \"frontend/src/components/MobileStickyActions.jsx\" \"frontend/src/components/StyleCarousel.jsx\")",
      "Bash(for file in \"frontend/src/components/withContractorScope.jsx\" \"frontend/src/components/withDynamicContrast.jsx\" \"frontend/src/components/common/PaginationComponent.jsx\")",
      "Bash(for file in \"frontend/src/components/contact/ContactInfoEditor.jsx\" \"frontend/src/pages/profile/index.jsx\" \"frontend/src/pages/calender/index.jsx\")",
      "Bash(git ls-tree:*)",
      "Read(//c/**)",
      "Bash(cat:*)",
      "Bash(npm run dev:*)",
      "Bash(grep:*)",
      "Bash(curl:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: restore authentication pages to exact legacy layout and functionality\n\n- Restored LoginPage to exact legacy structure with FontAwesome icons\n- Restored RequestAccessPage to exact legacy Bootstrap grid layout  \n- Restored ForgotPasswordPage to match legacy exactly\n- Fixed contracts page TypeError by replacing broken Redux with local state\n- Fixed AppSidebar outside-click behavior to match legacy mobile functionality\n- Fixed ShowroomModeToggle positioning to display above pin button as in legacy\n- Removed non-legacy floating mobile notification CTA from AppHeader\n- Added minimal authentication CSS to support proper layout while respecting customization\n- All authentication pages now use proper login-page-wrapper structure\n- Maintained full customization compatibility for colors and branding\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(npm run audit:manifest:*)",
      "Bash(npx playwright install:*)",
      "Bash(npx playwright test:*)",
      "Bash(gh pr create:*)",
      "Bash(chmod:*)",
      "Bash(./verify-files.sh:*)",
      "Bash(./verify-actual-files.sh:*)",
      "Bash(./verify-build.sh:*)",
      "Bash(./verify-frontend-build.sh:*)",
      "Bash(./node_modules/.bin/playwright test:*)",
      "Bash(npm run test:audit:*)",
      "Bash(node:*)",
      "Bash(npm run:*)",
      "Bash(awk:*)",
      "Bash(for:*)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then grep -n \"PageHeader\\|<Box maxW\\|<Container\" \"$file\")",
      "Bash(else echo \"File not found\")",
      "Bash(fi)",
      "Bash(find:*)",
      "Bash(pkill:*)",
      "Bash(1)",
      "Bash(do sed -i \"s/fontSize: ''\\([^'']*\\)''/fontSize=\"\"\\1\"\"/g\" \"$file\")",
      "Bash(echo:*)",
      "Bash(git fetch:*)",
      "Bash(taskkill:*)",
      "Bash(where ccundo)",
      "Bash(tasklist)",
      "Bash(findstr:*)",
      "Bash(netstat:*)",
      "Bash(split:*)",
      "Bash(test:*)"
    ],
    "deny": [],
    "ask": []
  }
}