{
  "permissions": {
    "allow": [
      "Bash(git log:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: extend CSP to allow PDF.js data: URIs in workers\n\nAdds data: to worker-src and child-src directives to fix CSP\nblocking of PDF viewer resources. PDF.js vendors may load worker\nscripts via blob: or data: URIs for proper rendering.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(npm outdated:*)",
      "Bash(npm update:*)",
      "Bash(dir:*)",
      "Bash(npm install)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: resolve PDF.js version mismatch between react-pdf and pdfjs-dist\n\nUpdates:\n- pdfjs-dist: 5.4.149 â†’ 5.4.296\n- react-pdf: 10.1.0 â†’ 10.2.0\n- Added npm overrides to force consistent pdfjs-dist version across all dependencies\n\nThis fixes the error: \"The API version '5.3.93' does not match the Worker version '5.4.296'\"\n\nBoth react-pdf and pdfjs-dist now use the same version (5.4.296), eliminating\nversion conflicts. The overrides field ensures all transitive dependencies\nalso use the correct version.\n\nDocker builds will automatically pick up these changes via package.json.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: enhance CSP and proposal creation robustness\n\nCSP Updates:\n- Add blob: and data: to connect-src directive for PDF.js worker communication\n- Allows PDF viewer to properly connect to blob/data URL workers\n\nProposal Controller Improvements:\n- Add date field sanitization to handle invalid dates gracefully\n- Add schema-aware column detection for backward compatibility\n- Only set proposal numbering fields if schema supports them\n- Only set owner_group_id and created_by_user_id if columns exist\n- Prevents FK errors and migration-related failures\n\nThis ensures the app works correctly even if migrations haven''t been fully applied,\nimproving deployment reliability and backward compatibility.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: improve hinge and exposed side validation logic\n\nChanges to CatalogTable.js and CatalogTableEdit.js:\n\n1. Standardized validation text:\n   - Changed \"Select exposed side\" to \"Select exposed finished side\" for consistency\n   - Now matches legacy app terminology across all components\n\n2. Prevented selection when not required:\n   - Hinge side buttons/badges now disabled when item doesn''t require hinge selection\n   - Exposed side buttons/badges now disabled when item doesn''t require exposed selection\n   - Added visual feedback: 50% opacity and \"not-allowed\" cursor when disabled\n   - Logic checks: subTypeRequirements.itemRequirements[idx]?.requiresHinge/requiresExposed\n   \n3. Applied to both desktop and mobile views in both components\n\nThis ensures users cannot accidentally select hinge/exposed sides for items\nthat don''t require those selections, improving data integrity and UX clarity.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit:*)",
      "Read(//c/njtake2/**)",
      "Bash(cat:*)",
      "Read(//c/**)",
      "Bash(npx vite-bundle-visualizer:*)",
      "Bash(npm run build:analyze:*)",
      "Bash(npm run dev:frontend:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run build:*)"
    ],
    "deny": [],
    "ask": []
  }
}
