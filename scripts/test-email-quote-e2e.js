#!/usr/bin/env node
// End-to-end-ish test: generate frontend HTML, then call the backend controller with noSend=true
// to validate that a non-empty PDF is produced and would be attached to the email.

/* eslint-disable no-console */
const path = require('node:path');
const fs = require('node:fs');
require('dotenv').config();

const { sendProposalEmail } = require('../controllers/emailController');

function argValue(flag) {
  const i = process.argv.indexOf(flag);
  return i >= 0 && i + 1 < process.argv.length ? process.argv[i + 1] : undefined;
}

async function run() {
  // Use the HTML previously generated by the frontend test, or fallback to a tiny inline sample.
  const htmlPath = path.resolve(__dirname, '../frontend/tmp/proposal_test.html');
  let htmlContent = '<!doctype html><html><body><h1>Fallback Proposal</h1></body></html>';
  try {
    if (fs.existsSync(htmlPath)) {
      htmlContent = await fs.promises.readFile(htmlPath, 'utf8');
    }
  } catch {}

  const toArg = argValue('--to');
  const shouldSend = process.argv.includes('--send');
  const toEmail = toArg || process.env.TEST_QUOTE_TO || 'joseca@symmetricalwolf.com';

  const req = {
    body: {
      email: toEmail,
      body: '<p>Testing email quote PDF generation.</p>',
      versions: 'v1',
      sendCopy: false,
      htmlContent,
      noSend: !shouldSend,
    },
  };

  const result = await new Promise((resolve, reject) => {
    const res = {
      _status: 200,
      status(code) { this._status = code; return this; },
      json(payload) { resolve({ status: this._status, payload }); return payload; },
    };
    sendProposalEmail(req, res).catch(reject);
  });

  if (result.status !== 200 || !result.payload?.success) {
    console.error('Controller returned error:', result);
    process.exit(1);
  }

  const bytes = result.payload?.pdfBytes ?? 0;
  console.log(`PDF bytes: ${bytes}`);
  if (bytes < 5000) { // threshold to catch empty/minimal PDFs
    console.error('PDF too small; likely empty.');
    process.exit(2);
  }

  if (shouldSend) {
    console.log(`✓ Email Quote send test passed (sent to: ${toEmail})`);
  } else {
    console.log('✓ Email Quote E2E (no-send) passed');
  }
}

run().catch((err) => {
  console.error('Test failed:', err?.stack || err);
  process.exit(1);
});
