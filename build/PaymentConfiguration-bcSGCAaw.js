import{j as e}from"./date-vendor-D9pAgX5F.js";import{r as a}from"./react-vendor-DF7UJAlN.js";import{u as s,a as r}from"./redux-vendor-BzdbewH4.js";import{h as t,a as n,b as i,c as o,u as l,e as d,C as c,d as m,H as p,U as g,V as u,I as y,w as f,J as h,a5 as x}from"./ui-vendor-DjmSPU99.js";import{P as C,l as j}from"./DefaultLayout-BUcG_pV2.js";import{u as v,a7 as w,a8 as b,a9 as N,aa as U}from"./index-DW-yAxzW.js";import{n as P}from"./index-BmyYYes_.js";import{S}from"./utils-vendor-Nl-sF5xe.js";import{c as E}from"./cil-save-CHBg7z_U.js";import"./form-vendor-CKNVq0c_.js";import"./icons-vendor-D82TZqJV.js";const L=()=>{const{t:L}=v(),k=s(),{paymentConfig:A,configLoading:F,configError:R}=r(e=>e.payments),[J,D]=a.useState({gatewayProvider:"stripe",gatewayUrl:"",embedCode:"",supportedCurrencies:["USD"],settings:{}}),[O,q]=a.useState(!1);a.useEffect(()=>{k(w())},[k]),a.useEffect(()=>{A&&D({gatewayProvider:A.gatewayProvider||"stripe",gatewayUrl:A.gatewayUrl||"",embedCode:A.embedCode||"",supportedCurrencies:Array.isArray(A.supportedCurrencies)?A.supportedCurrencies:"string"==typeof A.supportedCurrencies?A.supportedCurrencies.split(",").map(e=>e.trim().toUpperCase()).filter(Boolean):["USD"],settings:A.settings||{}})},[A]);const G=(e,a)=>{D(s=>({...s,[e]:a})),q(!0)},H=()=>Array.isArray(J.supportedCurrencies)?J.supportedCurrencies.join(", "):"string"==typeof J.supportedCurrencies?J.supportedCurrencies:"";return e.jsxs(t,{fluid:!0,className:"payment-config",children:[e.jsx("style",{children:"\n        /* Small, safe, component-scoped mobile tweaks */\n        .payment-config .card-header .d-flex { gap: 0.5rem; flex-wrap: wrap; }\n        @media (max-width: 576px) {\n          .payment-config .card-header .d-flex > .btn { flex: 1 1 auto; min-height: 44px; }\n          .payment-config .card-body .row + .row { margin-top: 0.5rem; }\n          .payment-config textarea, .payment-config input, .payment-config select { min-height: 44px; }\n        }\n      "}),e.jsx(C,{title:L("paymentConfig.title","Payment Configuration"),subtitle:L("paymentConfig.subtitle","Configure payment gateway settings and embedded payment forms"),icon:P}),R&&e.jsx(n,{color:"danger",dismissible:!0,onClose:()=>k(b()),children:R}),e.jsxs(i,{children:[e.jsxs(o,{className:"d-flex justify-content-between align-items-center",children:[e.jsxs("h5",{className:"mb-0",children:[e.jsx(l,{icon:j,className:"me-2"}),L("paymentConfig.gateway.title","Payment Gateway Settings")]}),e.jsxs("div",{className:"d-flex gap-2",children:[e.jsx(d,{color:"secondary",variant:"outline",onClick:async()=>{if(J.gatewayUrl)try{new URL(J.gatewayUrl),S.fire(L("common.success","Success"),L("paymentConfig.test.success","Configuration appears valid. Please test with a real payment to confirm."),"success")}catch(e){S.fire(L("common.error","Error"),L("paymentConfig.test.invalidUrl","Invalid gateway URL"),"error")}else S.fire(L("common.error","Error"),L("paymentConfig.test.noUrl","Please configure a gateway URL first"),"warning")},disabled:F,children:L("paymentConfig.test.button","Test Configuration")}),e.jsxs(d,{color:"primary",onClick:async()=>{try{const e={...J,settings:"string"==typeof J.settings?JSON.parse(J.settings):J.settings};A?.id?await k(N({id:A.id,...e})).unwrap():await k(U(e)).unwrap(),q(!1),S.fire(L("common.success","Success"),L("paymentConfig.save.success","Payment configuration saved successfully"),"success")}catch(e){S.fire(L("common.error","Error"),e.message||L("paymentConfig.save.error","Failed to save payment configuration"),"error")}},disabled:F||!O,children:[F?e.jsx(c,{size:"sm",className:"me-2"}):e.jsx(l,{icon:E,className:"me-2"}),L("common.save","Save")]})]})]}),e.jsx(m,{children:e.jsxs(p,{children:[e.jsxs(g,{className:"mb-3",children:[e.jsxs(u,{md:6,children:[e.jsx(y,{htmlFor:"gatewayProvider",children:L("paymentConfig.gateway.provider","Gateway Provider")}),e.jsxs(f,{id:"gatewayProvider",value:J.gatewayProvider,onChange:e=>G("gatewayProvider",e.target.value),children:[e.jsx("option",{value:"stripe",children:L("paymentConfig.providers.stripe","Stripe")}),e.jsx("option",{value:"paypal",children:L("paymentConfig.providers.paypal","PayPal")}),e.jsx("option",{value:"square",children:L("paymentConfig.providers.square","Square")}),e.jsx("option",{value:"custom",children:L("paymentConfig.providers.custom","Custom")})]})]}),e.jsxs(u,{md:6,children:[e.jsx(y,{htmlFor:"supportedCurrencies",children:L("paymentConfig.currencies.label","Supported Currencies")}),e.jsx(h,{id:"supportedCurrencies",type:"text",value:H(),onChange:e=>(e=>{const a=(e||"").split(",").map(e=>e.trim().toUpperCase()).filter(e=>e);G("supportedCurrencies",a)})(e.target.value),placeholder:L("paymentConfig.currencies.placeholder","USD, EUR, CAD")}),e.jsx("small",{className:"text-muted",children:L("paymentConfig.currencies.help","Separate multiple currencies with commas")})]})]}),e.jsx(g,{className:"mb-3",children:e.jsxs(u,{md:12,children:[e.jsxs(y,{htmlFor:"gatewayUrl",children:[L("paymentConfig.gateway.url","Gateway URL")," *"]}),e.jsx(h,{id:"gatewayUrl",type:"url",value:J.gatewayUrl,onChange:e=>G("gatewayUrl",e.target.value),placeholder:L("paymentConfig.gateway.urlPlaceholder","https://your-payment-gateway.com/checkout"),required:!0}),e.jsx("small",{className:"text-muted",children:L("paymentConfig.gateway.urlHelp","The URL where customers will be redirected to make payments")})]})}),e.jsx(g,{className:"mb-3",children:e.jsxs(u,{md:12,children:[e.jsx(y,{htmlFor:"embedCode",children:L("paymentConfig.embed.title","Embedded Payment Form Code")}),e.jsx(x,{id:"embedCode",rows:8,value:J.embedCode,onChange:e=>G("embedCode",e.target.value),placeholder:L("paymentConfig.embed.placeholder","Paste your payment gateway's embed code here...")}),e.jsx("small",{className:"text-muted",children:L("paymentConfig.embed.help","Optional: HTML/JavaScript code to embed payment forms directly in your pages")})]})}),e.jsx(g,{className:"mb-3",children:e.jsxs(u,{md:12,children:[e.jsx(y,{htmlFor:"settings",children:L("paymentConfig.advanced.title","Advanced Settings (JSON)")}),e.jsx(x,{id:"settings",rows:6,value:"object"==typeof J.settings?JSON.stringify(J.settings,null,2):J.settings,onChange:e=>G("settings",e.target.value),placeholder:'{\n  "theme": "light",\n  "locale": "en",\n  "allowedPaymentMethods": ["card", "bank_transfer"]\n}'}),e.jsx("small",{className:"text-muted",children:L("paymentConfig.advanced.help","Additional configuration options in JSON format")})]})})]})})]}),e.jsxs(i,{className:"mt-4",children:[e.jsx(o,{children:e.jsx("h5",{className:"mb-0",children:L("paymentConfig.preview.title","Configuration Preview")})}),e.jsx(m,{children:e.jsxs("div",{className:"border rounded p-3 bg-light",children:[e.jsx("h6",{children:L("paymentConfig.preview.current","Current Configuration")}),e.jsxs("div",{className:"row",children:[e.jsxs("div",{className:"col-md-6",children:[e.jsxs("strong",{children:[L("paymentConfig.gateway.provider","Provider"),":"]})," ",J.gatewayProvider]}),e.jsxs("div",{className:"col-md-6",children:[e.jsxs("strong",{children:[L("paymentConfig.currencies.label","Currencies"),":"]})," ",H()]})]}),e.jsxs("div",{className:"mt-2",children:[e.jsxs("strong",{children:[L("paymentConfig.gateway.url","Gateway URL"),":"]}),e.jsx("br",{}),e.jsx("code",{className:"text-break",children:J.gatewayUrl||L("paymentConfig.preview.notSet","Not configured")})]}),J.embedCode&&e.jsxs("div",{className:"mt-2",children:[e.jsxs("strong",{children:[L("paymentConfig.embed.title","Embed Code"),":"]}),e.jsx("br",{}),e.jsx("small",{className:"text-muted",children:L("paymentConfig.preview.embedConfigured","Embedded payment form configured")})]})]})})]})]})};export{L as default};
